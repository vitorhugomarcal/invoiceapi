// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  BASIC
  MASTER
}

model User {
  id         String   @id @default(uuid())
  name       String
  email      String   @unique
  role       Role     @default(BASIC)
  created_at DateTime @default(now())

  Company           Company[]
  Client            Client[]
  Item              Item[]
  UnitTypeCustom    UnitTypeCustom[]
  PaymentModeCustom PaymentModeCustom[]

  @@map("users")
}

model Company {
  id           String @id @default(uuid())
  name         String
  cnpj         String @unique
  phone        String
  number       String
  state        String
  city         String
  cep          String
  address      String
  neighborhood String

  user    User   @relation(fields: [user_id], references: [id])
  user_id String

  @@map("companies")
}

model Client {
  id             String  @id @default(uuid())
  type           String
  cpf            String?
  cnpj           String?
  name           String
  company_name   String?
  emailAddress   String
  phone          String
  cep            String
  address        String
  address_number String
  neighborhood   String
  city           String
  state          String

  user    User      @relation(fields: [user_id], references: [id])
  user_id String
  
  Invoice Invoice[]

  @@map("clients")
}

model PaymentMode {
  id   String @id @default(uuid())
  name String

  @@map("payments_mode")
}

model PaymentModeCustom {
  id   String @id @default(uuid())
  name String

  user    User   @relation(fields: [user_id], references: [id])
  user_id String

  @@map("payments_mode_custom")
}

model UnitType {
  id   String @id @default(uuid())
  name String

  @@map("unit_types")
}

model UnitTypeCustom {
  id   String @id @default(uuid())
  name String

  user    User   @relation(fields: [user_id], references: [id])
  user_id String

  @@map("unit_types_custom")
}

model Item {
  id          String  @id @default(uuid())
  name        String
  price       Decimal
  description String
  unit        String

  user    User   @relation(fields: [user_id], references: [id])
  user_id String

  @@map("items")
}

model Invoice {
  id String @id @default(uuid())

  client   Client @relation(fields: [client_id], references: [id])
  client_id String

  @@map("invoices")
}
